{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-1\\\\client\\\\src\\\\Pages\\\\MaterialFork\\\\MaterialFork.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './MaterialFork.scss';\nimport { useEffect, useState } from \"react\";\nimport Grid from \"../../Components/Grid/Grid\";\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MaterialFork(props) {\n  _s();\n  //properties\n\n  //states\n  var [searchParams, setSearchParams] = useSearchParams();\n  var [materials, setMaterials] = useState([]); //Array<obj>\n  var [materialName, setmaterialName] = useState(\"\"); //sting\n  var [materialRef, setMaterialRef] = useState(\"\"); //string\n  var [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\n  var [materialPublished, setMaterialPublished] = useState(false); //bool\n  var [materialAuthors, setMaterialAuthors] = useState([]); //Array<string>\n\n  //refs\n\n  //functions\n  const test = event => {\n    const elmt = event.currentTarget || event.target;\n    const elmtRef = elmt.getAttribute(\"materialref\");\n    axios.get(\"http://localhost:5000/materials/findByRef/\" + elmtRef).then(res => {\n      const resData = res.data[0];\n      var newAuthors = materialAuthors;\n      for (var a = 0; a < resData.materialAuthors.length; a++) {\n        if (newAuthors.indexOf(resData.materialAuthors[a]) === -1) {\n          newAuthors.push(resData.materialAuthors[a]);\n        }\n      }\n      setMaterialAuthors(newAuthors);\n\n      //axios.get;\n    });\n  };\n\n  //variables\n  const MaterialRef = searchParams.get(\"materialRef\");\n\n  //Effects\n\n  //get materials\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/materials/\").then(res => {\n      setMaterials(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/materials/findByRef/\" + MaterialRef).then(res => {\n      const resData = res.data[0];\n      setmaterialName(resData.materialName);\n      setMaterialRef(resData.materialRef);\n      setMaterialCreatorUserName(resData.materialCreatorUserName);\n      setMaterialAuthors(resData.materialAuthors);\n    });\n  }, [MaterialRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MaterialFork\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        componentData: {\n          customClass: \"\",\n          numberOfColumns: 4\n        },\n        children: materials.map((material, key_1) => {\n          if (MaterialRef === material.materialRef) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              style: {\n                display: \"non\"\n              }\n            }, key_1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 40\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                materialref: material.materialRef,\n                onClick: test\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/materials/edit/?materialRef=\" + MaterialRef + \"&forkRef=\" + material.materialRef,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: material.materialName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: material.materialRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: material.materialAuthors.map((author, key_2) => {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: author\n                    }, key_2, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)]\n            }, key_1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n_s(MaterialFork, \"wS7viW/5ZQv+JR8jeynVi/KAg2Y=\", false, function () {\n  return [useSearchParams];\n});\n_c = MaterialFork;\nvar _c;\n$RefreshReg$(_c, \"MaterialFork\");","map":{"version":3,"names":["Link","useSearchParams","axios","useEffect","useState","Grid","MaterialFork","props","searchParams","setSearchParams","materials","setMaterials","materialName","setmaterialName","materialRef","setMaterialRef","materialCreatorUserName","setMaterialCreatorUserName","materialPublished","setMaterialPublished","materialAuthors","setMaterialAuthors","test","event","elmt","currentTarget","target","elmtRef","getAttribute","get","then","res","resData","data","newAuthors","a","length","indexOf","push","MaterialRef","customClass","numberOfColumns","map","material","key_1","display","author","key_2"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-1/client/src/Pages/MaterialFork/MaterialFork.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\nimport { Link, useSearchParams  } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './MaterialFork.scss';\r\nimport { useEffect, useState } from \"react\";\r\nimport Grid from \"../../Components/Grid/Grid\";\r\n\r\n//exports\r\nexport default function MaterialFork(props) {\r\n\t//properties\r\n\r\n\t//states\r\n    var [searchParams, setSearchParams] = useSearchParams();\r\n\tvar [materials, setMaterials] = useState([]); //Array<obj>\r\n    var [materialName, setmaterialName] = useState(\"\"); //sting\r\n    var [materialRef, setMaterialRef] = useState(\"\"); //string\r\n\tvar [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\r\n\tvar [materialPublished, setMaterialPublished] = useState(false); //bool\r\n\tvar [materialAuthors, setMaterialAuthors] = useState([]) //Array<string>\r\n\r\n\t//refs\r\n\r\n\t//functions\r\n    const test = (event) => {\r\n        const elmt = event.currentTarget || event.target;\r\n        const elmtRef = elmt.getAttribute(\"materialref\");\r\n\r\n        axios.get(\"http://localhost:5000/materials/findByRef/\" + elmtRef)\r\n            .then((res) => {\r\n                const resData = res.data[0];\r\n                var newAuthors = materialAuthors;\r\n\r\n                for (var a = 0; a < resData.materialAuthors.length; a++) {\r\n                    if (newAuthors.indexOf(resData.materialAuthors[a]) === -1) {\r\n                        newAuthors.push(resData.materialAuthors[a]);\r\n\r\n                    }\r\n                }\r\n\r\n                setMaterialAuthors(newAuthors);\r\n\r\n                //axios.get;\r\n            });\r\n    };\r\n\r\n\t//variables\r\n    const MaterialRef = searchParams.get(\"materialRef\");\r\n\r\n\t//Effects\r\n\r\n\t//get materials\r\n\tuseEffect(() => {\r\n\t\taxios.get(\"http://localhost:5000/materials/\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMaterials(res.data);\r\n\r\n\t\t\t})\r\n\t}, []);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/materials/findByRef/\" + MaterialRef)\r\n            .then((res) => {\r\n                const resData = res.data[0];\r\n\r\n                setmaterialName(resData.materialName);\r\n                setMaterialRef(resData.materialRef);\r\n                setMaterialCreatorUserName(resData.materialCreatorUserName);\r\n                setMaterialAuthors(resData.materialAuthors);\r\n            });\r\n\t}, [MaterialRef]);\r\n\r\n\treturn (\r\n\t\t<div className=\"MaterialFork\"> \r\n            <div className=\"inner\">\r\n                <Grid componentData={ { customClass : \"\", numberOfColumns : 4 } }>\r\n                    {\r\n                        materials.map((material, key_1) => {\r\n                            if (MaterialRef ===  material.materialRef) {\r\n                                return <div key={ key_1 } className=\"item\" style={ { display: \"non\" } }/>\r\n\r\n                            } else {\r\n                                return (\r\n                                    <div key={ key_1 } className=\"item\">\r\n                                        <div className=\"inner\" materialref={ material.materialRef } onClick={ test } />\r\n                                        <Link to={ \"/materials/edit/?materialRef=\" + MaterialRef + \"&forkRef=\" + material.materialRef } >\r\n                                            <p>{ material.materialName }</p>\r\n\r\n                                            <p>{ material.materialRef }</p>\r\n\r\n                                            <p>\r\n                                                {\r\n                                                    material.materialAuthors.map((author, key_2) => {\r\n                                                        return (\r\n                                                            <span key={ key_2 }>{ author }</span>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </p>\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}