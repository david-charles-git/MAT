{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-1\\\\client\\\\src\\\\Components\\\\PropertyGroup\\\\PropertyGroup.js\";\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\n//imports\nimport InfoIconWithPopUp from \"../InfoIconWithPopUp/InfoIconWithPopUp\";\nimport PropertyInput from \"../PropertyInput/PropertyInput\";\nimport './PropertyGroup.scss';\n\n//interface\n// const iPropertyGroup = { //interface?\n//    ID : 0, //number\n//    name : \"\", //string\n//    description : \"\", //string\n//    allowMultiple : true, //bool\n//    dataGroup : [] //Array<obj>\n// };\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PropertyGroup(props) {\n  //properties\n  const groupID = props.componentData.ID;\n  const groupName = props.componentData.name;\n  const groupAllowMultiple = props.componentData.allowMultiple;\n  const groupDescription = props.componentData.description;\n  const dataGroup = props.componentData.dataGroup; //Array<obj>\n\n  if (dataGroup) {\n    //variables\n    const componentClass = \"PropertyGroup\"; //string\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: componentClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          children: [groupName ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: groupName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(InfoIconWithPopUp, {\n            componentData: {\n              information: groupDescription,\n              reference: null\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: dataGroup.length > 0 ? dataGroup.map((group, key) => {\n            const dataGroupKeys = Object.keys(group); //Array<string>\n\n            if (dataGroupKeys.length > 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: dataGroupKeys.map((dataKey, index) => {\n                  if (dataKey === \"ID\") {\n                    return null;\n                  } else {\n                    const dataObject = group[dataKey]; //obj\n\n                    return /*#__PURE__*/_jsxDEV(PropertyInput, {\n                      componentData: {\n                        dataObject: dataObject\n                      }\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 68\n                    }, this);\n                  }\n                })\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this);\n            } else {\n              return null;\n            }\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Data Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Group Does Not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = PropertyGroup;\nvar _c;\n$RefreshReg$(_c, \"PropertyGroup\");","map":{"version":3,"names":["InfoIconWithPopUp","PropertyInput","PropertyGroup","props","groupID","componentData","ID","groupName","name","groupAllowMultiple","allowMultiple","groupDescription","description","dataGroup","componentClass","information","reference","length","map","group","key","dataGroupKeys","Object","keys","dataKey","index","dataObject"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-1/client/src/Components/PropertyGroup/PropertyGroup.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\n//imports\r\nimport InfoIconWithPopUp from \"../InfoIconWithPopUp/InfoIconWithPopUp\";\r\nimport PropertyInput from \"../PropertyInput/PropertyInput\";\r\nimport './PropertyGroup.scss';\r\n\r\n//interface\r\n// const iPropertyGroup = { //interface?\r\n//    ID : 0, //number\r\n//    name : \"\", //string\r\n//    description : \"\", //string\r\n//    allowMultiple : true, //bool\r\n//    dataGroup : [] //Array<obj>\r\n// };\r\n\r\n//exports\r\nexport default function PropertyGroup(props) {\r\n    //properties\r\n    const groupID = props.componentData.ID;\r\n    const groupName = props.componentData.name;\r\n    const groupAllowMultiple = props.componentData.allowMultiple;\r\n    const groupDescription = props.componentData.description;\r\n    const dataGroup = props.componentData.dataGroup; //Array<obj>\r\n\r\n    if (dataGroup) {\r\n        //variables\r\n        const componentClass = \"PropertyGroup\"; //string\r\n        \r\n        return (\r\n            <div className={ componentClass }>\r\n                <div className=\"inner\">\r\n                    <div className=\"head\">\r\n                        { groupName ? <p>{ groupName }</p> : <></> }\r\n\r\n                        <InfoIconWithPopUp componentData={ { information : groupDescription, reference : null } } />\r\n                    </div>\r\n\r\n                    <div className=\"body\">\r\n                        {\r\n                            dataGroup.length > 0 ?\r\n                                dataGroup.map((group, key) => {\r\n                                    const dataGroupKeys = Object.keys(group); //Array<string>\r\n                \r\n                                    if (dataGroupKeys.length > 0) {\r\n                                        return (\r\n                                            <div key={ key } className=\"group\">\r\n                                                {\r\n                                                    dataGroupKeys.map((dataKey, index) => {\r\n                                                        if (dataKey === \"ID\") {\r\n                                                            return null\r\n                            \r\n                                                        } else {\r\n                                                            const dataObject = group[dataKey]; //obj\r\n\r\n                                                            return <PropertyInput key={ index } componentData={ { dataObject : dataObject } } />\r\n                                                        }\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n\r\n                                    } else {\r\n                                        return null\r\n                                    }\r\n                                })\r\n                            :\r\n                                <p>No Data Groups</p>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <p>Data Group Does Not exist</p>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,iBAAiB,MAAM,wCAAwC;AACtE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAO,sBAAsB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA,eAAe,SAASC,aAAa,CAACC,KAAK,EAAE;EACzC;EACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,aAAa,CAACC,EAAE;EACtC,MAAMC,SAAS,GAAGJ,KAAK,CAACE,aAAa,CAACG,IAAI;EAC1C,MAAMC,kBAAkB,GAAGN,KAAK,CAACE,aAAa,CAACK,aAAa;EAC5D,MAAMC,gBAAgB,GAAGR,KAAK,CAACE,aAAa,CAACO,WAAW;EACxD,MAAMC,SAAS,GAAGV,KAAK,CAACE,aAAa,CAACQ,SAAS,CAAC,CAAC;;EAEjD,IAAIA,SAAS,EAAE;IACX;IACA,MAAMC,cAAc,GAAG,eAAe,CAAC,CAAC;;IAExC,oBACI;MAAK,SAAS,EAAGA,cAAgB;MAAA,uBAC7B;QAAK,SAAS,EAAC,OAAO;QAAA,wBAClB;UAAK,SAAS,EAAC,MAAM;UAAA,WACfP,SAAS,gBAAG;YAAA,UAAKA;UAAS;YAAA;YAAA;YAAA;UAAA,QAAM,gBAAG,qCAAK,eAE1C,QAAC,iBAAiB;YAAC,aAAa,EAAG;cAAEQ,WAAW,EAAGJ,gBAAgB;cAAEK,SAAS,EAAG;YAAK;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAC1F,eAEN;UAAK,SAAS,EAAC,MAAM;UAAA,UAEbH,SAAS,CAACI,MAAM,GAAG,CAAC,GAChBJ,SAAS,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;YAC1B,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC;;YAE1C,IAAIE,aAAa,CAACJ,MAAM,GAAG,CAAC,EAAE;cAC1B,oBACI;gBAAiB,SAAS,EAAC,OAAO;gBAAA,UAE1BI,aAAa,CAACH,GAAG,CAAC,CAACM,OAAO,EAAEC,KAAK,KAAK;kBAClC,IAAID,OAAO,KAAK,IAAI,EAAE;oBAClB,OAAO,IAAI;kBAEf,CAAC,MAAM;oBACH,MAAME,UAAU,GAAGP,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC;;oBAEnC,oBAAO,QAAC,aAAa;sBAAe,aAAa,EAAG;wBAAEE,UAAU,EAAGA;sBAAW;oBAAG,GAArDD,KAAK;sBAAA;sBAAA;sBAAA;oBAAA,QAAmD;kBACxF;gBACJ,CAAC;cAAC,GAXCL,GAAG;gBAAA;gBAAA;gBAAA;cAAA,QAaR;YAGd,CAAC,MAAM;cACH,OAAO,IAAI;YACf;UACJ,CAAC,CAAC,gBAEF;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAqB;UAAA;UAAA;UAAA;QAAA,QAE3B;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ;EAGd,CAAC,MAAM;IACH,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC;EAExC;AACJ;AAAC,KA9DuBlB,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}