{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-repo\\\\MAT\\\\client\\\\src\\\\Components\\\\PropertyInput\\\\PropertyInput.js\";\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\n//imports\nimport Button from \"../Button/Button\";\nimport InfoIconWithPopUp from \"../InfoIconWithPopUp/InfoIconWithPopUp\";\nimport ScaleInput from \"../ScaleInput/ScaleInput\";\nimport UnitInput from \"../UnitInput/UnitInput\";\nimport ValueInput from \"../ValueInput/ValueInput\";\nimport './PropertyInput.scss';\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PropertyInput(props) {\n  //property\n  //const propertyIndex = props.componentData.index; //number\n  const propertyGroup = props.componentData.propertyGroup; //obj\n  const property = props.componentData.property; //obj\n  const handlePropertyChange = props.componentData.handlePropertyChange; //any\n\n  if (property) {\n    //properties\n    const propertyName = property.name; //string\n    const propertyValue = property.value; //string\n    const propertyDescription = property.description; //string\n    const propertyType = property.type; //string\n    const propertyAllowMultipleItems = property.allowMultipleItems; //bool\n    const propertyOptions = property.options; //Array<obj>\n    const propertyUnits = property.units; //Array<obj>\n    const propertyScales = property.scales; //Array<obj>\n    const propertyItems = property.items; //Array<obj>\n\n    //functions\n    const generateBodyClass = () => {\n      var bodyClass = \"body\"; //string\n\n      if (units.length > 0 && scales.length > 0) {\n        bodyClass += \" threeColumn\";\n      } else if (units.length > 0 || scales.length > 0) {\n        bodyClass += \" twoColumn\";\n      }\n      return bodyClass;\n    };\n\n    //variables\n    const componentClass = \"PropertyInput\"; //string\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: componentClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          children: [propertyName ? /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: propertyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(InfoIconWithPopUp, {\n            componentData: {\n              information: propertyDescription,\n              reference: null\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), propertyItems.length > 0 ? propertyItems.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: generateBodyClass(),\n            children: [/*#__PURE__*/_jsxDEV(ValueInput, {\n              componentData: {\n                index: key,\n                dataType: propertyType,\n                options: propertyOptions,\n                propertyGroup: propertyGroup,\n                item: item,\n                updateItem: handlePropertyChange\n                // currentIsRange : item.isRange,\n                // currentValue : item.value,\n                // currentMinValue : item.minValue,\n                // currentMaxValue : item.maxValue,\n                // currentDeviation : item.deviation,\n                // currentStandardFormIndex : item.standardFormIndex\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(UnitInput, {\n              componentData: {\n                index: key,\n                units: propertyUnits,\n                propertyGroup: propertyGroup,\n                item: item,\n                updateItem: handlePropertyChange\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ScaleInput, {\n              componentData: {\n                index: key,\n                scales: propertyScales,\n                propertyGroup: propertyGroup,\n                item: item,\n                updateItem: handlePropertyChange\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: generateBodyClass(),\n          children: [/*#__PURE__*/_jsxDEV(ValueInput, {\n            componentData: {\n              index: 0,\n              dataType: propertyType,\n              options: propertyOptions,\n              propertyGroup: propertyGroup,\n              item: {},\n              updateItem: handlePropertyChange\n              // currentIsRange : item.isRange,\n              // currentValue : item.value,\n              // currentMinValue : item.minValue,\n              // currentMaxValue : item.maxValue,\n              // currentDeviation : item.deviation,\n              // currentStandardFormIndex : item.standardFormIndex\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(UnitInput, {\n            componentData: {\n              index: 0,\n              units: propertyUnits,\n              propertyGroup: propertyGroup,\n              item: {},\n              updateItem: handlePropertyChange\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ScaleInput, {\n            componentData: {\n              index: 0,\n              scales: propertyScales,\n              propertyGroup: propertyGroup,\n              item: {},\n              updateItem: handlePropertyChange\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), propertyAllowMultipleItems ? /*#__PURE__*/_jsxDEV(Button, {\n          componentData: {\n            class: \"\",\n            copy: \"Add \" + propertyName,\n            type: \"function\",\n            link: \"\",\n            function: event => {\n              console.log(event.currentTarget);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data Object Does Not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = PropertyInput;\nvar _c;\n$RefreshReg$(_c, \"PropertyInput\");","map":{"version":3,"names":["Button","InfoIconWithPopUp","ScaleInput","UnitInput","ValueInput","PropertyInput","props","propertyGroup","componentData","property","handlePropertyChange","propertyName","name","propertyValue","value","propertyDescription","description","propertyType","type","propertyAllowMultipleItems","allowMultipleItems","propertyOptions","options","propertyUnits","units","propertyScales","scales","propertyItems","items","generateBodyClass","bodyClass","length","componentClass","information","reference","map","item","key","index","dataType","updateItem","class","copy","link","function","event","console","log","currentTarget"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-repo/MAT/client/src/Components/PropertyInput/PropertyInput.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\n//imports\r\nimport Button from \"../Button/Button\";\r\nimport InfoIconWithPopUp from \"../InfoIconWithPopUp/InfoIconWithPopUp\";\r\nimport ScaleInput from \"../ScaleInput/ScaleInput\";\r\nimport UnitInput from \"../UnitInput/UnitInput\";\r\nimport ValueInput from \"../ValueInput/ValueInput\";\r\nimport './PropertyInput.scss';\r\n\r\n//exports\r\nexport default function PropertyInput(props) {\r\n    //property\r\n    //const propertyIndex = props.componentData.index; //number\r\n    const propertyGroup = props.componentData.propertyGroup; //obj\r\n    const property = props.componentData.property; //obj\r\n    const handlePropertyChange = props.componentData.handlePropertyChange; //any\r\n\r\n    if (property) {\r\n        //properties\r\n        const propertyName = property.name; //string\r\n        const propertyValue = property.value; //string\r\n        const propertyDescription = property.description; //string\r\n        const propertyType = property.type; //string\r\n        const propertyAllowMultipleItems = property.allowMultipleItems; //bool\r\n        const propertyOptions = property.options; //Array<obj>\r\n        const propertyUnits = property.units; //Array<obj>\r\n        const propertyScales = property.scales; //Array<obj>\r\n        const propertyItems = property.items; //Array<obj>\r\n\r\n        //functions\r\n        const generateBodyClass = () => {\r\n            var bodyClass = \"body\"; //string\r\n\r\n            if (units.length > 0 && scales.length > 0) {\r\n                bodyClass += \" threeColumn\";\r\n\r\n            } else if (units.length > 0 || scales.length > 0) {\r\n                bodyClass += \" twoColumn\";\r\n\r\n            }\r\n\r\n            return bodyClass;\r\n        };\r\n\r\n        //variables\r\n        const componentClass = \"PropertyInput\"; //string\r\n        \r\n        return (\r\n            <div className={ componentClass }>\r\n                <div className=\"inner\">\r\n                    <div className=\"head\">\r\n                        { propertyName ? <h6>{ propertyName }</h6> : <></> }\r\n\r\n                        <InfoIconWithPopUp componentData={ { information : propertyDescription, reference : null } } />\r\n                    </div>\r\n\r\n                    {\r\n                        propertyItems.length > 0 ? \r\n                        propertyItems.map((item, key) => {\r\n                                return (\r\n                                    <div key={ key } className={ generateBodyClass() }>\r\n                                        <ValueInput componentData={\r\n                                            {\r\n                                                index : key,\r\n                                                dataType : propertyType,\r\n                                                options : propertyOptions,\r\n                                                propertyGroup : propertyGroup,\r\n                                                item : item,\r\n                                                updateItem : handlePropertyChange\r\n                                                // currentIsRange : item.isRange,\r\n                                                // currentValue : item.value,\r\n                                                // currentMinValue : item.minValue,\r\n                                                // currentMaxValue : item.maxValue,\r\n                                                // currentDeviation : item.deviation,\r\n                                                // currentStandardFormIndex : item.standardFormIndex\r\n                                            }\r\n                                        } />\r\n\r\n                                        <UnitInput componentData={ {\r\n                                            index : key,\r\n                                            units : propertyUnits,\r\n                                            propertyGroup : propertyGroup,\r\n                                            item : item,\r\n                                            updateItem : handlePropertyChange\r\n                                        } } />\r\n\r\n                                        <ScaleInput componentData={ {\r\n                                            index : key,\r\n                                            scales : propertyScales,\r\n                                            propertyGroup : propertyGroup,\r\n                                            item : item,\r\n                                            updateItem : handlePropertyChange\r\n                                        } } />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        :\r\n                            <div className={ generateBodyClass() }>\r\n                                <ValueInput componentData={\r\n                                    {\r\n                                        index : 0,\r\n                                        dataType : propertyType,\r\n                                        options : propertyOptions,\r\n                                        propertyGroup : propertyGroup,\r\n                                        item : {},\r\n                                        updateItem : handlePropertyChange\r\n                                        // currentIsRange : item.isRange,\r\n                                        // currentValue : item.value,\r\n                                        // currentMinValue : item.minValue,\r\n                                        // currentMaxValue : item.maxValue,\r\n                                        // currentDeviation : item.deviation,\r\n                                        // currentStandardFormIndex : item.standardFormIndex\r\n                                    }\r\n                                } />\r\n\r\n                                <UnitInput componentData={ {\r\n                                    index : 0,\r\n                                    units : propertyUnits,\r\n                                    propertyGroup : propertyGroup,\r\n                                    item : {},\r\n                                    updateItem : handlePropertyChange\r\n                                } } />\r\n\r\n                                <ScaleInput componentData={ {\r\n                                    index : 0,\r\n                                    scales : propertyScales,\r\n                                    propertyGroup : propertyGroup,\r\n                                    item : {},\r\n                                    updateItem : handlePropertyChange\r\n                                } } />\r\n                            </div>\r\n                    }\r\n\r\n                    {\r\n                        propertyAllowMultipleItems ? \r\n                            <Button componentData={ \r\n                                {\r\n                                    class : \"\",\r\n                                    copy : \"Add \" + propertyName,\r\n                                    type : \"function\",\r\n                                    link : \"\",\r\n                                    function : (event) => { console.log(event.currentTarget); }\r\n                                }\r\n                            } />\r\n                        :\r\n                         <></>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <p>Data Object Does Not exist</p>\r\n        )\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}