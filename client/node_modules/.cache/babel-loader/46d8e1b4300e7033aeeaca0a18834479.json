{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-repo\\\\MAT\\\\client\\\\src\\\\Components\\\\ValueInput\\\\ValueInput.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\nimport { useState } from \"react\";\nimport NumberInput from \"../NumberInput/NumberInput\";\nimport OptionInput from \"../OptionInput/OptionInput\";\nimport TextInput from \"../TextInput/TextInput\";\nimport './ValueInput.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ValueInput(props) {\n  _s();\n  //properties\n  const valueIndex = props.componentData.index; //number\n  const valueType = props.componentData.type; //sting\n  const valueOptions = props.componentData.options; //Array<obj> \n  const valueItems = props.componentData.items; //Array<obj>\n  const valueItem = props.componentData.item; //obj\n  const updateValue = props.componentData.updateValue; //any\n\n  //states\n  var [item, setItem] = useState(valueItem); //obj\n\n  //functions\n  const handleUpdateSelectedOption = () => {};\n  const handleUpdateTextValue = newItem => {\n    if (Object.keys(newItem).length > 0) {\n      var item = newItem; //obj\n      var newitems = valueItems; //Array<obj>\n\n      if (newitems[valueIndex]) {\n        newitems[valueIndex] = item;\n      } else {\n        item = {\n          isRange: false,\n          minValue: 0,\n          maxValue: 0,\n          deviation: 0,\n          standardFormIndex: 0,\n          value: item.value,\n          unit: \"\",\n          scale: \"\"\n        };\n        newitems = [item];\n      }\n      setItem(item);\n      updateValue(newitems);\n    }\n  };\n  const handleUpdateNumberValue = newItem => {\n    if (newItem.value) {\n      var item = newItem;\n      var newitems = valueItems.length > 0 ? valueItems : [];\n      if (newitems[valueIndex]) {\n        newitems[valueIndex] = item;\n      } else {\n        item = {\n          isRange: item.isRange,\n          minValue: item.minValue,\n          maxValue: item.maxValue,\n          deviation: item.deviation,\n          standardFormIndex: item.standardFo,\n          value: item.value,\n          unit: \"\",\n          scale: \"\"\n        };\n        newitems = [item];\n      }\n      setItem(item);\n      updateValue(newitems);\n    }\n  };\n  const generateValueInput = () => {\n    if (valueType === \"select\") {\n      return /*#__PURE__*/_jsxDEV(OptionInput, {\n        componentData: {\n          optionIndex: 1,\n          item: item,\n          options: valueOptions,\n          updateSelectedOption: handleUpdateSelectedOption\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this);\n    } else if (valueType === \"text\") {\n      return /*#__PURE__*/_jsxDEV(TextInput, {\n        componentData: {\n          item: item,\n          updateTextValues: handleUpdateTextValue\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }, this);\n    } else if (valueType === \"number\") {\n      return /*#__PURE__*/_jsxDEV(NumberInput, {\n        componentData: {\n          item: item,\n          updateNumberValues: handleUpdateNumberValue\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  //variables\n  const componentClass = \"ValueInput\"; //string\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: componentClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: generateValueInput()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(ValueInput, \"jbUMK9yiwRX0UIbDwfNYrOgoU8o=\");\n_c = ValueInput;\nvar _c;\n$RefreshReg$(_c, \"ValueInput\");","map":{"version":3,"names":["useState","NumberInput","OptionInput","TextInput","ValueInput","props","valueIndex","componentData","index","valueType","type","valueOptions","options","valueItems","items","valueItem","item","updateValue","setItem","handleUpdateSelectedOption","handleUpdateTextValue","newItem","Object","keys","length","newitems","isRange","minValue","maxValue","deviation","standardFormIndex","value","unit","scale","handleUpdateNumberValue","standardFo","generateValueInput","optionIndex","updateSelectedOption","updateTextValues","updateNumberValues","componentClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-repo/MAT/client/src/Components/ValueInput/ValueInput.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\nimport { useState } from \"react\";\r\nimport NumberInput from \"../NumberInput/NumberInput\";\r\nimport OptionInput from \"../OptionInput/OptionInput\";\r\nimport TextInput from \"../TextInput/TextInput\";\r\nimport './ValueInput.scss';\r\n\r\nexport default function ValueInput(props) {\r\n    //properties\r\n    const valueIndex = props.componentData.index; //number\r\n    const valueType = props.componentData.type; //sting\r\n    const valueOptions = props.componentData.options; //Array<obj> \r\n    const valueItems = props.componentData.items; //Array<obj>\r\n    const valueItem = props.componentData.item; //obj\r\n    const updateValue = props.componentData.updateValue; //any\r\n\r\n    //states\r\n    var [item, setItem] = useState(valueItem); //obj\r\n\r\n    //functions\r\n    const handleUpdateSelectedOption = () => {\r\n\r\n    };\r\n    const handleUpdateTextValue = (newItem) => {\r\n        if (Object.keys(newItem).length > 0) {\r\n            var item = newItem; //obj\r\n            var newitems = valueItems; //Array<obj>\r\n\r\n            if (newitems[valueIndex]) {\r\n                newitems[valueIndex] = item;\r\n\r\n            } else {\r\n                item = {\r\n                    isRange : false,\r\n                    minValue : 0,\r\n                    maxValue : 0,\r\n                    deviation : 0,\r\n                    standardFormIndex : 0,\r\n                    value : item.value,\r\n                    unit : \"\",\r\n                    scale : \"\",\r\n                }\r\n                newitems = [item];\r\n\r\n            }\r\n\r\n            setItem(item);\r\n            updateValue(newitems);\r\n        }\r\n\r\n    };\r\n    const handleUpdateNumberValue = (newItem) => {\r\n        if (newItem.value) {\r\n            var item = newItem;\r\n            var newitems = valueItems.length > 0 ? valueItems : [];\r\n\r\n            if (newitems[valueIndex]) {\r\n                newitems[valueIndex] = item;\r\n\r\n            } else {\r\n                item = {\r\n                    isRange : item.isRange,\r\n                    minValue : item.minValue,\r\n                    maxValue : item.maxValue,\r\n                    deviation : item.deviation,\r\n                    standardFormIndex : item.standardFo,\r\n                    value : item.value,\r\n                    unit : \"\",\r\n                    scale : \"\",\r\n                }\r\n                newitems = [item];\r\n\r\n            }\r\n\r\n            setItem(item);\r\n            updateValue(newitems);\r\n        }\r\n\r\n    };\r\n    const generateValueInput = () => {\r\n        if (valueType === \"select\") {\r\n            return (\r\n                <OptionInput componentData={ {\r\n                    optionIndex : 1,\r\n                    item : item,\r\n                    options : valueOptions,\r\n                    updateSelectedOption : handleUpdateSelectedOption\r\n                } } />\r\n            )\r\n\r\n        } else if (valueType === \"text\") {\r\n            return <TextInput componentData={ {  item : item, updateTextValues : handleUpdateTextValue } } />\r\n\r\n        } else if (valueType === \"number\") {\r\n            return (\r\n                <NumberInput componentData={ {  item : item, updateNumberValues : handleUpdateNumberValue } } />\r\n            )\r\n        }\r\n    };\r\n\r\n    //variables\r\n    const componentClass = \"ValueInput\"; //string\r\n    \r\n    return (\r\n        <div className={ componentClass }>\r\n            <div className=\"inner\">\r\n                <p>Value</p>\r\n\r\n                <div className=\"inputContainer\">\r\n                    { generateValueInput() }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}