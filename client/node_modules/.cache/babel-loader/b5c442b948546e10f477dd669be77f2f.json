{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-repo\\\\MAT\\\\client\\\\src\\\\Areas\\\\PropertiesArea\\\\PropertiesArea.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\n//imports\nimport { useEffect, useState } from 'react';\nimport './PropertiesArea.scss';\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PropertiesArea(props) {\n  _s();\n  //properties\n  const customClass = props.componentData.customClass; //string\n  const propertyGroup = props.componentData.propertyGroup; //obj\n  const updatePropertyGroup = props.componentData.updatePropertyGroup; //any\n\n  //states\n  var [properties, setProperties] = useState({});\n\n  //functions\n  const generateProperty = property => {\n    if (property.value) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: property.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), property.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: property.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), generateInput(property)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  const generateInput = property => {\n    if (property.type === \"text\") {\n      if (property.items.length > 0) {\n        property.items.map((item, key) => {\n          console.log(key);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"propertyInput\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter Value\",\n                value: item.value,\n                onChange: () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyInput\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Value\",\n              value: \"\",\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (property.type === \"number\") {\n      if (property.items.length > 0) {\n        property.items.map((item, key) => {\n          console.log(key);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"propertyInput\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Enter Value\",\n                value: item.value,\n                onChange: () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyInput\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter Value\",\n              value: 0,\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (property.type === \"select\") {} else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  //variables\n  const componentClass = customClass ? \"PropertiesArea \" + customClass : \"PropertiesArea\"; //string\n\n  //effects\n  useEffect(() => {\n    setProperties(propertyGroup);\n  }, [propertyGroup]);\n  if (properties.value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: componentClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: properties.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: properties.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"properties\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: properties.properties.length > 0 ? properties.properties.map((property, key) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"property\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inner\",\n                  children: generateProperty(property)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 49\n                }, this)\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 45\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n}\n_s(PropertiesArea, \"GeAUhjcdRGGSvM6jb11Sr31BEqI=\");\n_c = PropertiesArea;\nvar _c;\n$RefreshReg$(_c, \"PropertiesArea\");","map":{"version":3,"names":["useEffect","useState","PropertiesArea","props","customClass","componentData","propertyGroup","updatePropertyGroup","properties","setProperties","generateProperty","property","value","name","description","generateInput","type","items","length","map","item","key","console","log","componentClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-repo/MAT/client/src/Areas/PropertiesArea/PropertiesArea.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\n//imports\r\nimport { useEffect, useState } from 'react';\r\nimport './PropertiesArea.scss';\r\n\r\n//exports\r\nexport default function PropertiesArea(props) {\r\n    //properties\r\n    const customClass = props.componentData.customClass; //string\r\n    const propertyGroup = props.componentData.propertyGroup; //obj\r\n    const updatePropertyGroup = props.componentData.updatePropertyGroup; //any\r\n\r\n    //states\r\n    var [properties, setProperties] = useState({});\r\n\r\n    //functions\r\n    const generateProperty = (property) => {\r\n        if (property.value) {\r\n            return (\r\n                <>\r\n                    <h6>{ property.name }</h6>\r\n\r\n                    { property.description ? <p>{ property.description }</p> : <></> }\r\n                    \r\n                    { generateInput(property) }\r\n                </>\r\n            )\r\n\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n    const generateInput = (property) => {\r\n        if (property.type === \"text\") {\r\n            if (property.items.length > 0) {\r\n                property.items.map((item, key) => {\r\n                    console.log(key);\r\n                    return (\r\n                        <div key={ key } className='propertyInput'>\r\n                            <div className='inner'>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Value\"\r\n                                    value={ item.value }\r\n                                    onChange={ () => {} }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n            } else {\r\n                return (\r\n                    <div className='propertyInput'>\r\n                        <div className='inner'>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Value\"\r\n                                value={\"\"}\r\n                                onChange={ () => {} }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        } else if (property.type === \"number\") {\r\n            if (property.items.length > 0) {\r\n                property.items.map((item, key) => {\r\n                    console.log(key);\r\n                    return (\r\n                        <div key={ key } className='propertyInput'>\r\n                            <div className='inner'>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder=\"Enter Value\"\r\n                                    value={ item.value }\r\n                                    onChange={ () => {} }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n            } else {\r\n                return (\r\n                    <div className='propertyInput'>\r\n                        <div className='inner'>\r\n                            <input\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Value\"\r\n                                value={ 0 }\r\n                                onChange={ () => {} }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else if (property.type === \"select\") {\r\n\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n\r\n    //variables\r\n    const componentClass = customClass ? \"PropertiesArea \" + customClass : \"PropertiesArea\"; //string\r\n\r\n    //effects\r\n        useEffect(() => {\r\n            setProperties(propertyGroup);\r\n        }, [propertyGroup]);\r\n\r\n    if (properties.value) {\r\n        return (\r\n            <div className={ componentClass }>\r\n                <div className=\"inner\">\r\n                    <h4>{ properties.name }</h4>\r\n                    <p>{ properties.description }</p>\r\n\r\n                    <div className='properties'>\r\n                        <div className='inner'>\r\n                            {\r\n                                properties.properties.length > 0 ?\r\n                                    properties.properties.map((property, key) => {\r\n                                        return (\r\n                                            <div key={ key } className=\"property\">\r\n                                                <div className='inner'>\r\n                                                    { generateProperty(property) }\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                :\r\n                                    <></>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n    \r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return <></>\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}