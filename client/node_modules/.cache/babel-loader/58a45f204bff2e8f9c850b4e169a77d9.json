{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-repo\\\\MAT\\\\client\\\\src\\\\Components\\\\OptionInput\\\\OptionInput.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\n//imports\nimport { useRef, useState } from 'react';\nimport './OptionInput.scss';\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OptionInput(props) {\n  _s();\n  //properties\n  const initialOption = props.componentData.initialOption; //obj\n  const options = props.componentData.options; //Array<obj>\n\n  //states\n  var [selectedOptionName, setSelectedOptionName] = useState(initialOption.name);\n  var [selectedOptionRef, setSelectedOptionRef] = useState(initialOption.ref);\n  var [selectedOptionDescription, setSelectedOptionDescription] = useState(initialOption.description);\n  var [selectedOptionLink, setSelectedOptionLink] = useState(initialOption.link);\n  var [optionInputIsOpen, setOptionInputIsOpen] = useState(false);\n  var [optionBodyHeight, setOptionBodyHeight] = useState(0); //number\n\n  //refs\n  const optionBodyInnerRef = useRef();\n\n  //functions\n  const handleOptionOnChange = () => {\n    console.log(\"handle option on change\");\n  };\n  const handleOpenCloseOptionInput = () => {\n    const optionBodyInnerHeight = optionBodyInnerRef.current.offsetHeight;\n    if (optionInputIsOpen) {\n      setOptionInputIsOpen(false);\n      setOptionBodyHeight(0);\n    } else {\n      setOptionInputIsOpen(true);\n      setOptionBodyHeight(optionBodyInnerHeight);\n    }\n  };\n\n  //variables\n  const componentClass = optionInputIsOpen ? \"OptionInput active\" : \"OptionInput\"; //string\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: componentClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        onClick: handleOpenCloseOptionInput,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          value: selectedOptionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          value: selectedOptionRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          value: selectedOptionDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          value: selectedOptionLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedOptionName || \"Select a tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        style: {\n          height: optionBodyHeight + \"px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: optionBodyInnerRef,\n          className: \"inner\",\n          children: options.map((option, key) => {\n            const optionClass = selectedOptionRef === option.ref ? \"option active\" : \"option\";\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: optionClass,\n              onClick: handleOptionOnChange,\n              optionname: option.name,\n              optionref: option.ref,\n              optiondescription: option.description,\n              optionlink: option.link,\n              children: option.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(OptionInput, \"TL+y5OHn92Y0T0ndP8cz7SLGN0I=\");\n_c = OptionInput;\nvar _c;\n$RefreshReg$(_c, \"OptionInput\");","map":{"version":3,"names":["useRef","useState","OptionInput","props","initialOption","componentData","options","selectedOptionName","setSelectedOptionName","name","selectedOptionRef","setSelectedOptionRef","ref","selectedOptionDescription","setSelectedOptionDescription","description","selectedOptionLink","setSelectedOptionLink","link","optionInputIsOpen","setOptionInputIsOpen","optionBodyHeight","setOptionBodyHeight","optionBodyInnerRef","handleOptionOnChange","console","log","handleOpenCloseOptionInput","optionBodyInnerHeight","current","offsetHeight","componentClass","height","map","option","key","optionClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-repo/MAT/client/src/Components/OptionInput/OptionInput.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\n//imports\r\nimport { useRef, useState } from 'react';\r\nimport './OptionInput.scss';\r\n\r\n//exports\r\nexport default function OptionInput(props) {\r\n    //properties\r\n    const initialOption = props.componentData.initialOption; //obj\r\n    const options = props.componentData.options; //Array<obj>\r\n\r\n    //states\r\n    var [selectedOptionName, setSelectedOptionName] = useState(initialOption.name);\r\n    var [selectedOptionRef, setSelectedOptionRef] = useState(initialOption.ref);\r\n    var [selectedOptionDescription, setSelectedOptionDescription] = useState(initialOption.description);\r\n    var [selectedOptionLink, setSelectedOptionLink] = useState(initialOption.link);\r\n    var [optionInputIsOpen, setOptionInputIsOpen] = useState(false);\r\n    var [optionBodyHeight, setOptionBodyHeight] = useState(0); //number\r\n\r\n    //refs\r\n    const optionBodyInnerRef = useRef();\r\n\r\n    //functions\r\n    const handleOptionOnChange = () => {\r\n        console.log(\"handle option on change\");\r\n    };\r\n    const handleOpenCloseOptionInput = () => {\r\n        const optionBodyInnerHeight = optionBodyInnerRef.current.offsetHeight;\r\n\r\n        if (optionInputIsOpen) {\r\n            setOptionInputIsOpen(false);\r\n            setOptionBodyHeight(0);\r\n\r\n        } else {\r\n            setOptionInputIsOpen(true);\r\n            setOptionBodyHeight(optionBodyInnerHeight);\r\n\r\n        }\r\n    };\r\n\r\n    //variables\r\n    const componentClass = optionInputIsOpen ? \"OptionInput active\" : \"OptionInput\"; //string\r\n\r\n\treturn (\r\n\t\t<div className={ componentClass }>\r\n            <div className=\"inner\">\r\n                <div className=\"head\" onClick={ handleOpenCloseOptionInput }>\r\n                    <input type=\"hidden\" value={ selectedOptionName } />\r\n                    <input type=\"hidden\" value={ selectedOptionRef } />\r\n                    <input type=\"hidden\" value={ selectedOptionDescription } />\r\n                    <input type=\"hidden\" value={ selectedOptionLink } />\r\n\r\n                    <p>{ selectedOptionName || \"Select a tool\" }</p>\r\n                </div>\r\n\r\n                <div className=\"body\" style={ { height : optionBodyHeight + \"px\" }}>\r\n                    <div ref={ optionBodyInnerRef } className=\"inner\"> \r\n                        {\r\n                            options.map((option, key) => {\r\n                                const optionClass = selectedOptionRef === option.ref ? \"option active\" : \"option\";\r\n\r\n                                return (\r\n                                    <p\r\n                                        key={ key }\r\n                                        className={ optionClass }\r\n                                        onClick={ handleOptionOnChange }\r\n                                        optionname={ option.name }\r\n                                        optionref={ option.ref }\r\n                                        optiondescription={ option.description }\r\n                                        optionlink={ option.link }\r\n                                    >\r\n                                        { option.name }\r\n                                    </p>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}