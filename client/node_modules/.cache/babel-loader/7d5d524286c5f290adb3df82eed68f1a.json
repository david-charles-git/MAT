{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-1\\\\client\\\\src\\\\Components\\\\PropertyValueInput\\\\PropertyValueInput.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\n//imports\nimport { useRef } from \"react\";\nimport PropertyInfoComponent from \"../PropertyInfoComponent/PropertyInfoComponent\";\nimport SelectDropDown from \"../SelectDropDown/SelectDropDown\";\nimport TextInput from \"../TextInput/TextInput\";\nimport './PropertyValueInput.scss';\n\n//interface\n// const iPropertyValueInput = { //interface\n//     dataName : \"\", //sting\n//     dataType : \"\", //string\n//     values : [ //Array<obj>\n//         {\n//             ID : 0, //number\n//             name : \"\", //string\n//             value : \"\", //string\n//             reference : \"\", //string,\n//             information : \"\", //string\n//         }\n//     ],\n// };\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PropertyValueInput(props) {\n  _s();\n  //properties\n  const dataName = props.componentData.dataName; //sting\n  const dataType = props.componentData.dataType; //sting\n  const values = props.componentData.values; //Array<obj>\n\n  //refs\n  const currentIDRef = useRef(); //any\n  const currentValueRef = useRef(); //any\n  const currentNameRef = useRef(); //any\n\n  //functions\n  const generateValueInput = () => {\n    console.log(dataType === \"text\");\n    if (dataType === \"select\") {\n      generateSelectInput();\n    } else if (dataType === \"text\") {\n      generateTextInput();\n    }\n  };\n  const generateSelectInput = () => {\n    if (values.length === 1) {\n      const valueID = values[0].ID; //number\n      const valueName = values[0].name; //string\n      const valueValue = values[0].value; //any\n      const valueReference = values[0].reference; //string\n      const valueInformation = values[0].information; //string\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentIDRef,\n          className: \"currentID\",\n          type: \"hidden\",\n          value: !isNaN(valueID) ? valueID : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentValueRef,\n          className: \"currentValue\",\n          type: \"hidden\",\n          value: valueValue ? valueValue : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentNameRef,\n          className: \"currentName\",\n          type: \"hidden\",\n          value: valueName ? valueName : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: valueName ? valueName : \"Value Name not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PropertyInfoComponent, {\n          componentData: {\n            reference: valueReference,\n            information: valueInformation\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else if (values.length > 1) {\n      return /*#__PURE__*/_jsxDEV(SelectDropDown, {\n        componentData: {\n          dropDownOptions: values\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  const generateTextInput = () => {\n    console.log(\"generate Tect Input\");\n    return /*#__PURE__*/_jsxDEV(TextInput, {\n      componentData: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  };\n\n  //variables\n  const componentClass = \"PropertyValueInput\"; //string\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: componentClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: dataName ? dataName : \"Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: generateValueInput()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(PropertyValueInput, \"vBQqiaMXyP0OCqfS8nTBzzkys0U=\");\n_c = PropertyValueInput;\nvar _c;\n$RefreshReg$(_c, \"PropertyValueInput\");","map":{"version":3,"names":["useRef","PropertyInfoComponent","SelectDropDown","TextInput","PropertyValueInput","props","dataName","componentData","dataType","values","currentIDRef","currentValueRef","currentNameRef","generateValueInput","console","log","generateSelectInput","generateTextInput","length","valueID","ID","valueName","name","valueValue","value","valueReference","reference","valueInformation","information","isNaN","dropDownOptions","componentClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-1/client/src/Components/PropertyValueInput/PropertyValueInput.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\n//imports\r\nimport { useRef } from \"react\";\r\nimport PropertyInfoComponent from \"../PropertyInfoComponent/PropertyInfoComponent\";\r\nimport SelectDropDown from \"../SelectDropDown/SelectDropDown\";\r\nimport TextInput from \"../TextInput/TextInput\";\r\nimport './PropertyValueInput.scss';\r\n\r\n//interface\r\n// const iPropertyValueInput = { //interface\r\n//     dataName : \"\", //sting\r\n//     dataType : \"\", //string\r\n//     values : [ //Array<obj>\r\n//         {\r\n//             ID : 0, //number\r\n//             name : \"\", //string\r\n//             value : \"\", //string\r\n//             reference : \"\", //string,\r\n//             information : \"\", //string\r\n//         }\r\n//     ],\r\n// };\r\n\r\n//exports\r\nexport default function PropertyValueInput(props) {\r\n    //properties\r\n    const dataName = props.componentData.dataName; //sting\r\n    const dataType = props.componentData.dataType; //sting\r\n    const values = props.componentData.values; //Array<obj>\r\n\r\n    //refs\r\n    const currentIDRef = useRef(); //any\r\n    const currentValueRef = useRef(); //any\r\n    const currentNameRef = useRef(); //any\r\n\r\n    //functions\r\n    const generateValueInput = () => {\r\n        console.log(dataType === \"text\")\r\n        if (dataType === \"select\") {\r\n            generateSelectInput();\r\n\r\n        } else if (dataType === \"text\") {\r\n            generateTextInput();\r\n\r\n        }\r\n    };\r\n    const generateSelectInput = () => {\r\n        if (values.length === 1) {\r\n            const valueID = values[0].ID; //number\r\n            const valueName = values[0].name; //string\r\n            const valueValue = values[0].value; //any\r\n            const valueReference = values[0].reference; //string\r\n            const valueInformation = values[0].information; //string\r\n\r\n            return (\r\n                <>\r\n                    <input ref={ currentIDRef } className=\"currentID\" type=\"hidden\" value={ !isNaN(valueID) ? valueID : \"\" } />\r\n                    <input ref={ currentValueRef } className=\"currentValue\" type=\"hidden\" value={ valueValue ? valueValue : \"\" } />\r\n                    <input ref={ currentNameRef } className=\"currentName\" type=\"hidden\" value={ valueName ? valueName : \"\" } />\r\n\r\n                    <p>{ valueName ? valueName : \"Value Name not found\" }</p>\r\n\r\n                    <PropertyInfoComponent componentData={ { reference : valueReference, information : valueInformation } } />\r\n                </>\r\n            )\r\n\r\n        } else if (values.length > 1) {\r\n            return (\r\n                <SelectDropDown componentData={ { dropDownOptions : values } } />\r\n            )\r\n\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n    const generateTextInput = () => {\r\n        console.log(\"generate Tect Input\")\r\n        return (\r\n            <TextInput componentData={ {} } />\r\n        )\r\n    };\r\n\r\n    //variables\r\n    const componentClass = \"PropertyValueInput\"; //string\r\n\r\n    return (\r\n        <div className={ componentClass }>\r\n            <div className=\"inner\">\r\n                <p>{ dataName ? dataName : \"Value\" }</p>\r\n\r\n                <div className=\"inputContainer\">\r\n                    { generateValueInput() }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}