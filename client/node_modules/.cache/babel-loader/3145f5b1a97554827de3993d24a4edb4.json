{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-1\\\\client\\\\src\\\\Pages\\\\MaterialFork\\\\MaterialFork.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './MaterialFork.scss';\nimport { useEffect, useState } from \"react\";\nimport Grid from \"../../Components/Grid/Grid\";\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MaterialFork(props) {\n  _s();\n  //properties\n  //const userUserName = props.pageData.userUserName; //string\n\n  //states\n  var [searchParams, setSearchParams] = useSearchParams();\n  var [materials, setMaterials] = useState([]); //Array<obj>\n  var [materialName, setmaterialName] = useState(\"\"); //sting\n  var [materialRef, setMaterialRef] = useState(\"\"); //string\n  var [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\n\n  var [materialAuthors, setMaterialAuthors] = useState([]); //Array<string>\n\n  //refs\n\n  //functions\n  const navigate = useNavigate();\n  const habdleForkItem = event => {\n    const elmt = event.currentTarget || event.target;\n    const elmtRef = elmt.getAttribute(\"materialref\");\n    axios.get(\"http://localhost:5000/materials/findByRef/\" + elmtRef).then(res => {\n      const resData = res.data[0];\n      if (resData) {\n        const newDescription = resData.materialDescription;\n        const newCoverImageSrc = resData.materialCoverImageSrc;\n        var newAuthors = materialAuthors;\n        for (var a = 0; a < resData.materialAuthors.length; a++) {\n          if (newAuthors.indexOf(resData.materialAuthors[a]) === -1) {\n            newAuthors.push(resData.materialAuthors[a]);\n          }\n        }\n        const navigationTo = \"/materials/edit/?materialRef=\" + MaterialRef; //string\n        const postTo = \"http://localhost:5000/materials/update/\" + MaterialRef; //string\n        const data = {\n          //obj\n          materialName: materialName,\n          materialRef: materialRef,\n          materialForkedFrom: elmtRef,\n          materialCreatorUserName: materialCreatorUserName,\n          materialAuthors: newAuthors,\n          materialDescription: newDescription,\n          materialCoverImageSrc: newCoverImageSrc\n        };\n        axios.post(postTo, data).then(res => {\n          console.log(\"Material Forked\");\n        });\n        navigate(navigationTo);\n      }\n    });\n  };\n\n  //variables\n  const MaterialRef = searchParams.get(\"materialRef\");\n\n  //Effects\n  //get materials\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/materials/\").then(res => {\n      setMaterials(res.data);\n    });\n  }, []);\n  //get currentMaterial\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/materials/findByRef/\" + MaterialRef).then(res => {\n      const resData = res.data[0];\n      if (resData) {\n        setmaterialName(resData.materialName);\n        setMaterialRef(resData.materialRef);\n        //setMaterialForkedFrom(resData.materialForkedFrom);\n        setMaterialCreatorUserName(resData.materialCreatorUserName);\n        setMaterialAuthors(resData.materialAuthors);\n      }\n    });\n  }, [MaterialRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MaterialFork\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        componentData: {\n          customClass: \"\",\n          numberOfColumns: 4\n        },\n        children: materials.map((material, key_1) => {\n          if (MaterialRef === material.materialRef) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              style: {\n                display: \"none\"\n              }\n            }, key_1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                materialref: material.materialRef,\n                onClick: habdleForkItem,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: material.materialName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: material.materialRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: material.materialAuthors.map((author, key_2) => {\n                    return /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: author\n                    }, key_2, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 61\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)\n            }, key_1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n_s(MaterialFork, \"SWpBG/nF2QJAGWV+q7l15MUUw68=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = MaterialFork;\nvar _c;\n$RefreshReg$(_c, \"MaterialFork\");","map":{"version":3,"names":["useSearchParams","useNavigate","axios","useEffect","useState","Grid","MaterialFork","props","searchParams","setSearchParams","materials","setMaterials","materialName","setmaterialName","materialRef","setMaterialRef","materialCreatorUserName","setMaterialCreatorUserName","materialAuthors","setMaterialAuthors","navigate","habdleForkItem","event","elmt","currentTarget","target","elmtRef","getAttribute","get","then","res","resData","data","newDescription","materialDescription","newCoverImageSrc","materialCoverImageSrc","newAuthors","a","length","indexOf","push","navigationTo","MaterialRef","postTo","materialForkedFrom","post","console","log","customClass","numberOfColumns","map","material","key_1","display","author","key_2"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-1/client/src/Pages/MaterialFork/MaterialFork.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\nimport { useSearchParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './MaterialFork.scss';\r\nimport { useEffect, useState } from \"react\";\r\nimport Grid from \"../../Components/Grid/Grid\";\r\n\r\n//exports\r\nexport default function MaterialFork(props) {\r\n\t//properties\r\n\t//const userUserName = props.pageData.userUserName; //string\r\n\r\n\t//states\r\n    var [searchParams, setSearchParams] = useSearchParams();\r\n\tvar [materials, setMaterials] = useState([]); //Array<obj>\r\n    var [materialName, setmaterialName] = useState(\"\"); //sting\r\n    var [materialRef, setMaterialRef] = useState(\"\"); //string\r\n\tvar [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\r\n\r\n\tvar [materialAuthors, setMaterialAuthors] = useState([]) //Array<string>\r\n\r\n\t//refs\r\n\r\n\t//functions\r\n    const navigate = useNavigate();\r\n    const habdleForkItem = (event) => {\r\n        const elmt = event.currentTarget || event.target;\r\n        const elmtRef = elmt.getAttribute(\"materialref\");\r\n\r\n        axios.get(\"http://localhost:5000/materials/findByRef/\" + elmtRef)\r\n            .then((res) => {\r\n                const resData = res.data[0];\r\n\r\n                if (resData) {\r\n                    const newDescription = resData.materialDescription;\r\n                    const newCoverImageSrc = resData.materialCoverImageSrc;\r\n\r\n                    var newAuthors = materialAuthors;\r\n\r\n                    for (var a = 0; a < resData.materialAuthors.length; a++) {\r\n                        if (newAuthors.indexOf(resData.materialAuthors[a]) === -1) {\r\n                            newAuthors.push(resData.materialAuthors[a]);\r\n\r\n                        }\r\n                    }\r\n\r\n                    const navigationTo = \"/materials/edit/?materialRef=\" + MaterialRef; //string\r\n                    const postTo = \"http://localhost:5000/materials/update/\" + MaterialRef; //string\r\n                    const data = { //obj\r\n                        materialName : materialName,\r\n                        materialRef : materialRef,\r\n                        materialForkedFrom : elmtRef,\r\n                        materialCreatorUserName : materialCreatorUserName,\r\n\r\n                        materialAuthors : newAuthors,\r\n                        materialDescription : newDescription,\r\n                        materialCoverImageSrc : newCoverImageSrc\r\n                    };\r\n\r\n                    axios.post(postTo, data)\r\n                        .then((res) => { console.log(\"Material Forked\"); });\r\n                    \r\n                    navigate(navigationTo);\r\n                }\r\n            });\r\n    };\r\n\r\n\t//variables\r\n    const MaterialRef = searchParams.get(\"materialRef\");\r\n\r\n\t//Effects\r\n        //get materials\r\n        useEffect(() => {\r\n            axios.get(\"http://localhost:5000/materials/\")\r\n                .then((res) => {\r\n                    setMaterials(res.data);\r\n\r\n                })\r\n        }, []);\r\n        //get currentMaterial\r\n        useEffect(() => {\r\n            axios.get(\"http://localhost:5000/materials/findByRef/\" + MaterialRef)\r\n                .then((res) => {\r\n                    const resData = res.data[0];\r\n\r\n                    if(resData) {\r\n                        setmaterialName(resData.materialName);\r\n                        setMaterialRef(resData.materialRef);\r\n                        //setMaterialForkedFrom(resData.materialForkedFrom);\r\n                        setMaterialCreatorUserName(resData.materialCreatorUserName);\r\n                        setMaterialAuthors(resData.materialAuthors);\r\n                    }\r\n                });\r\n        }, [MaterialRef]);\r\n\r\n\treturn (\r\n\t\t<div className=\"MaterialFork\"> \r\n            <div className=\"inner\">\r\n                <Grid componentData={ { customClass : \"\", numberOfColumns : 4 } }>\r\n                    {\r\n                        materials.map((material, key_1) => {\r\n                            if (MaterialRef ===  material.materialRef) {\r\n                                return <div key={ key_1 } className=\"item\" style={ { display: \"none\" } }/>\r\n\r\n                            } else {\r\n                                return (\r\n                                    <div key={ key_1 } className=\"item\">\r\n                                        <div className=\"inner\" materialref={ material.materialRef } onClick={ habdleForkItem } >\r\n                                            <h4>{ material.materialName }</h4>\r\n\r\n                                            <p>{ material.materialRef }</p>\r\n\r\n                                            <p>\r\n                                                {\r\n                                                    material.materialAuthors.map((author, key_2) => {\r\n                                                        return (\r\n                                                            <span key={ key_2 }>{ author }</span>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </div>\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}