{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\MAT-1\\\\client\\\\src\\\\Pages\\\\MaterialView\\\\MaterialView.js\",\n  _s = $RefreshSig$();\n/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\n\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './MaterialView.scss';\nimport { useEffect, useState } from \"react\";\n\n//exports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MaterialView(props) {\n  _s();\n  //properties\t\n  const userUserName = props.pageData.userUserName; //string\n\n  //states\n  var [searchParams, setSearchParams] = useSearchParams();\n  var [materialName, setmaterialName] = useState(\"\"); //sting\n  var [materialRef, setMaterialRef] = useState(\"\"); //string\n  var [materialForkedFromRef, setMaterialForkedFromRef] = useState(\"\"); //string\n  var [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\n  var [materialPublished, setMaterialPublished] = useState(false); //bool \n  var [materialCreationDate, setMaterialCreationDate] = useState(\"\"); //string\n  var [materialUpdetedDate, setMaterialUpdetedDate] = useState(\"\"); //string\n  var [creatorFirstName, setCreatorFirstName] = useState(\"\"); //string\n  var [creatorLastName, setCreatorLastName] = useState(\"\"); //string\n\n  var [materialAuthors, setMaterialAuthors] = useState([]); //Array<string>\n  var [materialDescription, setMaterialDescription] = useState(\"\"); //string\n  var [materialCoverImageSrc, setMaterialCoverImageSrc] = useState(\"\"); //string\n\n  //variables\n  const materialSearchRef = searchParams.get(\"materialRef\");\n\n  //Effects\n  //set material data\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/materials/findByRef/\" + materialSearchRef).then(res => {\n      const resData = res.data[0]; //obj\n\n      if (resData) {\n        setmaterialName(resData.name);\n        setMaterialRef(resData.ref);\n        setMaterialForkedFromRef(resData.forkedFromRef);\n        setMaterialCreatorUserName(resData.creatorUserName);\n        setMaterialPublished(resData.published);\n        setMaterialCreationDate(resData.createdAt);\n        setMaterialUpdetedDate(resData.updatedAt);\n        setMaterialAuthors(resData.details.authors);\n        setMaterialDescription(resData.details.description);\n        setMaterialCoverImageSrc(resData.coverImage.source);\n      }\n    });\n    console.log(data);\n  }, [materialSearchRef]);\n  //set user data\n  useEffect(() => {\n    if (materialCreatorUserName) {\n      axios.get(\"http://localhost:5000/users/findByUserName/\" + materialCreatorUserName).then(res => {\n        const resData = res.data[0]; //obj\n\n        setCreatorFirstName(resData.userFirstName);\n        setCreatorLastName(resData.userLastName);\n      });\n    }\n  }, [materialCreatorUserName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MaterialView\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: materialName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created By: \", creatorFirstName + \" \" + creatorLastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date Created: \", materialCreationDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Updated: \", materialUpdetedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"REF: \", materialRef]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), materialForkedFromRef ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Forked From : \", materialForkedFromRef]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n_s(MaterialView, \"+7Hq1AfnIk3mKT8CR1/aBlzBq8c=\", false, function () {\n  return [useSearchParams];\n});\n_c = MaterialView;\nvar _c;\n$RefreshReg$(_c, \"MaterialView\");","map":{"version":3,"names":["useSearchParams","axios","useEffect","useState","MaterialView","props","userUserName","pageData","searchParams","setSearchParams","materialName","setmaterialName","materialRef","setMaterialRef","materialForkedFromRef","setMaterialForkedFromRef","materialCreatorUserName","setMaterialCreatorUserName","materialPublished","setMaterialPublished","materialCreationDate","setMaterialCreationDate","materialUpdetedDate","setMaterialUpdetedDate","creatorFirstName","setCreatorFirstName","creatorLastName","setCreatorLastName","materialAuthors","setMaterialAuthors","materialDescription","setMaterialDescription","materialCoverImageSrc","setMaterialCoverImageSrc","materialSearchRef","get","then","res","resData","data","name","ref","forkedFromRef","creatorUserName","published","createdAt","updatedAt","details","authors","description","coverImage","source","console","log","userFirstName","userLastName"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/MAT-1/client/src/Pages/MaterialView/MaterialView.js"],"sourcesContent":["/*\r\n\tProject : Materiom\r\n\tAuthor(s) : David Charles - AddMustard\r\n*/\r\n\r\nimport { useSearchParams  } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport './MaterialView.scss';\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//exports\r\nexport default function MaterialView(props) {\r\n\t//properties\t\r\n\tconst userUserName = props.pageData.userUserName; //string\r\n\r\n\t//states\r\n    var [searchParams, setSearchParams] = useSearchParams();\r\n\tvar [materialName, setmaterialName] = useState(\"\"); //sting\r\n    var [materialRef, setMaterialRef] = useState(\"\"); //string\r\n\tvar [materialForkedFromRef, setMaterialForkedFromRef] = useState(\"\"); //string\r\n\tvar [materialCreatorUserName, setMaterialCreatorUserName] = useState(\"\"); //string\r\n\tvar [materialPublished, setMaterialPublished] = useState(false); //bool \r\n\tvar [materialCreationDate, setMaterialCreationDate] = useState(\"\"); //string\r\n\tvar [materialUpdetedDate, setMaterialUpdetedDate] = useState(\"\"); //string\r\n\tvar [creatorFirstName, setCreatorFirstName] = useState(\"\"); //string\r\n\tvar [creatorLastName, setCreatorLastName] = useState(\"\"); //string\r\n\r\n\tvar [materialAuthors, setMaterialAuthors] = useState([]) //Array<string>\r\n\tvar [materialDescription, setMaterialDescription] = useState(\"\"); //string\r\n\tvar [materialCoverImageSrc, setMaterialCoverImageSrc] = useState(\"\"); //string\r\n\r\n\t//variables\r\n    const materialSearchRef = searchParams.get(\"materialRef\");\r\n\r\n\t//Effects\r\n\t\t//set material data\r\n\t\tuseEffect(() => {\r\n\t\t\taxios.get(\"http://localhost:5000/materials/findByRef/\" + materialSearchRef)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconst resData = res.data[0]; //obj\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (resData) {\r\n\t\t\t\t\t\tsetmaterialName(resData.name);\r\n\t\t\t\t\t\tsetMaterialRef(resData.ref);\r\n\t\t\t\t\t\tsetMaterialForkedFromRef(resData.forkedFromRef);\r\n\t\t\t\t\t\tsetMaterialCreatorUserName(resData.creatorUserName);\r\n\t\t\t\t\t\tsetMaterialPublished(resData.published);\r\n\t\t\t\t\t\tsetMaterialCreationDate(resData.createdAt);\r\n\t\t\t\t\t\tsetMaterialUpdetedDate(resData.updatedAt);\r\n\r\n\t\t\t\t\t\tsetMaterialAuthors(resData.details.authors);\r\n\t\t\t\t\t\tsetMaterialDescription(resData.details.description);\r\n\t\t\t\t\t\tsetMaterialCoverImageSrc(resData.coverImage.source);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconsole.log(data);\r\n\t\t}, [materialSearchRef]);\r\n\t\t//set user data\r\n\t\tuseEffect(() => {\r\n\t\t\tif (materialCreatorUserName) {\r\n\t\t\t\taxios.get(\"http://localhost:5000/users/findByUserName/\" + materialCreatorUserName)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconst resData = res.data[0]; //obj\r\n\r\n\t\t\t\t\t\tsetCreatorFirstName(resData.userFirstName);\r\n\t\t\t\t\t\tsetCreatorLastName(resData.userLastName)\r\n\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}, [materialCreatorUserName]);\r\n\r\n\treturn (\r\n\t\t<div className=\"MaterialView\"> \r\n            <div className=\"inner\">\r\n                <div className=\"infoContainer\">\r\n\t\t\t\t\t<div className=\"inner\">\r\n\t\t\t\t\t\t<h4>{ materialName }</h4>\r\n\r\n\t\t\t\t\t\t<p>Created By: { creatorFirstName + \" \" + creatorLastName }</p>\r\n\r\n\t\t\t\t\t\t<p>Date Created: { materialCreationDate }</p>\r\n\r\n\t\t\t\t\t\t<p>Last Updated: { materialUpdetedDate }</p>\r\n\r\n\t\t\t\t\t\t<p>REF: { materialRef }</p>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmaterialForkedFromRef ? \r\n\t\t\t\t\t\t\t\t<p>Forked From : { materialForkedFromRef }</p>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n            </div>\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}